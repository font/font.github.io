<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet type="text/xsl" href="../assets/xml/rss.xsl" media="all"?><rss xmlns:dc="http://purl.org/dc/elements/1.1/" version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Ivan Font (Posts about google compute engine)</title><link>http://ivanfont.com/</link><description></description><atom:link rel="self" href="http://ivanfont.com/categories/google-compute-engine.xml" type="application/rss+xml"></atom:link><language>en</language><lastBuildDate>Tue, 28 Feb 2017 21:28:30 GMT</lastBuildDate><generator>Nikola (getnikola.com)</generator><docs>http://blogs.law.harvard.edu/tech/rss</docs><item><title>Pacman NGINX PHP MongoDB Application</title><link>http://ivanfont.com/posts/pacman-nginx-app/</link><dc:creator>Ivan Font</dc:creator><description>&lt;div&gt;&lt;h3&gt;Intro&lt;/h3&gt;
&lt;p&gt;I've started working on a Kubernetes reference application for demonstration purposes. This reference application will continue to evolve
to also work with cloud federation capabilities in Kubernetes. I will provide updates as the application evolves.&lt;/p&gt;
&lt;h3&gt;Pacman Game Architecture Brief Overview&lt;/h3&gt;
&lt;h4&gt;Pacman&lt;/h4&gt;
&lt;p&gt;The Pacman game is a slightly modified version of the open source Pacman game written in HTML5 with Javascript. You can get the modified
&lt;a href="https://github.com/font/pacman-canvas"&gt;Pacman game source code here&lt;/a&gt;. The modifications are particularly around the backend PHP API. The original
game used SQLite3 as the storage backend for reading and writing high scores. This change replaces SQLite3 with &lt;a href="https://www.mongodb.com/"&gt;MongoDB&lt;/a&gt;
as the storage mechanism.&lt;/p&gt;
&lt;h4&gt;NGINX + PHP FPM&lt;/h4&gt;
&lt;p&gt;&lt;a href="https://www.nginx.com/"&gt;NGINX&lt;/a&gt; is used as the web server to host the Pacman game application. It is configured with &lt;a href="https://php-fpm.org/"&gt;PHP FPM&lt;/a&gt; support for the backend PHP API.&lt;/p&gt;
&lt;h4&gt;PHP&lt;/h4&gt;
&lt;p&gt;PHP FPM is used for the PHP API to receive read and write requests from clients and perform database operations. The
&lt;a href="http://php.net/manual/en/set.mongodb.php"&gt;PHP MongoDB driver extension&lt;/a&gt; contains the minimal API for core driver functionality. In addition, the
&lt;a href="http://php.net/manual/en/mongodb.tutorial.library.php"&gt;PHP library for MongoDB&lt;/a&gt; provides the higher level APIs. Both are needed.&lt;/p&gt;
&lt;h4&gt;MongoDB&lt;/h4&gt;
&lt;p&gt;&lt;a href="https://www.mongodb.com/"&gt;MongoDB&lt;/a&gt; is used as the backend database to store the Pacman game's high score user data.&lt;/p&gt;
&lt;h3&gt;Conclusion&lt;/h3&gt;
&lt;p&gt;For a detailed overview of the Kubernetes reference application and how to set it up yourself, see the
&lt;a href="https://github.com/font/k8s-example-apps/tree/master/pacman-nginx-app"&gt;README&lt;/a&gt; in the repository.&lt;/p&gt;
&lt;h4&gt;Have fun!&lt;/h4&gt;
&lt;p&gt;&lt;img src="http://ivanfont.com/images/pacman.png"&gt;&lt;/p&gt;&lt;/div&gt;</description><category>game</category><category>gce</category><category>google compute engine</category><category>kubernetes</category><category>mongodb</category><category>nginx</category><category>pacman</category><guid>http://ivanfont.com/posts/pacman-nginx-app/</guid><pubDate>Tue, 07 Feb 2017 00:35:14 GMT</pubDate></item><item><title>Deploying Containerized Ceph on a Kubernetes Cluster Using Google Compute Engine</title><link>http://ivanfont.com/posts/ceph-on-gce-kubernetes-cluster/</link><dc:creator>Ivan Font</dc:creator><description>&lt;div&gt;&lt;h3&gt;Quick Summary&lt;/h3&gt;
&lt;p&gt;Recently we've been hard at work trying to set up dynamic provisioning of Ceph Rados
Block Device storage on a Kubernetes cluster. This required:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Kubernetes version &amp;gt;= 1.5&lt;/li&gt;
&lt;li&gt;The ability to install Ceph and RBD packages on all host nodes i.e. master and slaves&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Unfortunately we could not use Google Container Engine (GKE) for this because
at first, it did not support version 1.5 since it was too new.
Google quickly resolved that and has been really
good at keeping up-to-date with the latest Kubernetes releases. However, the
subsequent problem is that we needed to install Ceph and RBD packages on all host
nodes. Even though Google does provide a &lt;code&gt;CONTAINER_VM&lt;/code&gt; image that is able to
install packages, GKE does not provide access to the master to install the necessary
packages. This seems like a limitation with GKE. So it was decided to move towards
a manual deployment of a Kubernetes cluster. For the manual deployment we used
Google Compute Engine and followed the nice example Kelsey Hightower provides:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/kelseyhightower/kubernetes-the-hard-way"&gt;Kubernetes the Hard Way&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;At first, I was hitting a DNS problem until I realized that there was a firewall rule missing for
the POD CIDR that was being used. See &lt;a href="https://github.com/kelseyhightower/kubernetes-the-hard-way/issues/88"&gt;issue 88&lt;/a&gt; and the &lt;a href="https://github.com/kelseyhightower/kubernetes-the-hard-way/pull/117"&gt;pull request&lt;/a&gt; that resolves it for more details. It was also nice to script the deployment
so we created some scripts for that as well but they have not yet been merged. In the
meantime you can get them here:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/font/kubernetes-the-hard-way/tree/scripts"&gt;https://github.com/font/kubernetes-the-hard-way/tree/scripts&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;In the end it was good to understand how the different components of Kubernetes
fit together and be able to debug it a bit.&lt;/p&gt;
&lt;p&gt;After Kubernetes was deployed we deployed Ceph and went about testing CephFS and RBD
volume mounts, static provisioning of CephFS and RBD persistent volume claims, as
well as dynamic provisioning of RBD persistent volume claims and they all worked great!&lt;/p&gt;
&lt;h3&gt;Documentation&lt;/h3&gt;
&lt;p&gt;If you're interested you can get the detailed documentation here:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/ceph/ceph-docker/tree/master/examples/kubernetes/gce"&gt;https://github.com/ceph/ceph-docker/tree/master/examples/kubernetes/gce&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;Video Demonstration&lt;/h4&gt;
&lt;p&gt;In the documentation you'll also find a link to this video demonstration that walks through those
steps:&lt;/p&gt;
&lt;iframe width="560" height="315" src="https://www.youtube.com/embed/ic38-19wIGY" frameborder="0" allowfullscreen&gt;&lt;/iframe&gt;

&lt;h4&gt;Enjoy!&lt;/h4&gt;&lt;/div&gt;</description><category>ceph</category><category>cloud</category><category>gce</category><category>google compute engine</category><category>kubernetes</category><category>storage</category><guid>http://ivanfont.com/posts/ceph-on-gce-kubernetes-cluster/</guid><pubDate>Fri, 03 Feb 2017 19:38:03 GMT</pubDate></item></channel></rss>